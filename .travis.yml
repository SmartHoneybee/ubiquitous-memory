language: c
dist: trusty
sudo: required
service:
  - docker
env:
  global:
    - GOV=1.11
    - GOSHA="b3fcf280ff86558e0559e185b601c9eade0fd24c900b4c63cd14d1d38613e499  go${GOV}.linux-amd64.tar.gz"
    - GOPATH="${HOME}/go"
    - GOROOT="${HOME}/${GOV}/go"
    - PATH="${GOROOT}/bin:${PATH}:${GOPATH}/bin"
    - SRCROOT="${GOPATH}/src/github.com/mattermost"
    - GOARM=7
    
    - MMDEBSTRAP_COMMIT='550562cf6f45d77e9803ef3f99036fbd4ff4a0fd'
    - MMDEBSTRAP_MIRROR='http://archive.ubuntu.com/ubuntu/'
    - MMDEBSTRAP_SUITE='buster'
    - MMDEBSTRAP_TARGET='build-chroot'
    
    - DOCKER_PWD='/mnt'
  matrix:
    - V=5.3.1
before_install:
  - git clone https://gitlab.mister-muffin.de/josch/mmdebstrap.git
  # record action in script
  - touch mmdebstrap/setup.sh
  - chmod +x mmdebstrap/setup.sh
  - l() { echo "${@}" >> mmdebstrap/setup.sh; }
  - l set -ex
  # receive missing debian key
  - l apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 7638D0442B90D010 8B48AD6246925553 EF0F382A1A7B6500
  # create debian chroot
  - l mmdebstrap --mode='sudo' --aptopt='Apt::Sandbox::User "root"' "${MMDEBSTRAP_SUITE}" "${MMDEBSTRAP_TARGET}"
  # execute script in container
  - docker pull debian:stretch
  - docker run --interactive=true --mount="type=bind,source=mmdebstrap,destination=${DOCKER_PWD}" --rm=true --tty=true --workdir='${DOCKER_PWD}' ./setup.sh
  # download & extract golang
  - wget -q "https://storage.googleapis.com/golang/go${GOV}.linux-amd64.tar.gz"
  - sha256sum --check <<< "${GOSHA}"
  - tar -C "${HOME}/${GOV}" -xzf "go${GOV}.linux-amd64.tar.gz"
  # download & extract mattermost-server
  - wget -q "https://github.com/mattermost/mattermost-server/archive/v${V}.tar.gz" -O mattermost-server.tar.gz
  - tar -C "${SRCROOT}/mattermost-server" --strip-components=1 -xf mattermost-server.tar.gz
  # download & extract mattermost-webapp
  - wget -q "https://github.com/mattermost/mattermost-webapp/archive/v${V}.tar.gz" -O mattermost-webapp.tar.gz
  - tar -C "${SRCROOT}/mattermost-webapp" --strip-components=1 -xf mattermost-webapp.tar.gz
script:
  - make build -C "${SRCROOT}/mattermost-webapp"
  # workaround (instead of patch): platform binary is in GOOS_GOARCH, Makefile expects it in linux_amd64
  - ln -s "${GOPATH}/bin/linux_arm" "${GOPATH}/bin/linux_amd64"
  # adapt and revert reverted commit, https://github.com/mattermost/mattermost-server/pull/8537
  - patch -d "${SRCROOT}/mattermost-server" -p1 < "${TRAVIS_BUILD_DIR}/build-release.patch"
  # workaround (instead of patch): overwrite GO variable to enforce desired GOARCH
  - make config-reset build-linux package-linux -C "${SRCROOT}/mattermost-server" PLUGIN_PACKAGES="" GO="GOARCH=arm $(which go)" BUILD_NUMBER="dev-arm-tag${V}"
  # workaround (instead of patch): Makefile creates *-amd64.tar.gz
  - mv "${SRCROOT}/mattermost-server/dist/mattermost-team-linux-amd64.tar.gz" "${TRAVIS_BUILD_DIR}/mattermost-${V}-arm.tar.gz"
  - sha512sum "${TRAVIS_BUILD_DIR}/mattermost-${V}-arm.tar.gz" | tee "${TRAVIS_BUILD_DIR}/mattermost-${V}-arm.tar.gz.sha512sum"
deploy:
  provider: releases
  api_key: "${GITHUB_OAUTH_TOKEN}"
  file:
    - "${TRAVIS_BUILD_DIR}/mattermost-${V}-arm.tar.gz"
    - "${TRAVIS_BUILD_DIR}/mattermost-${V}-arm.tar.gz.sha512sum"
  skip_cleanup: true
