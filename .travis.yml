language: c
dist: trusty
sudo: required
service:
  - docker
env:
  global:
    - GOV=1.11
    - GOSHA="b3fcf280ff86558e0559e185b601c9eade0fd24c900b4c63cd14d1d38613e499  go${GOV}.linux-amd64.tar.gz"
    - GOPATH="${HOME}/go"
    - GOROOT="${HOME}/${GOV}/go"
    - PATH="${GOROOT}/bin:${PATH}:${GOPATH}/bin"
    - SRCROOT="${GOPATH}/src/github.com/mattermost"
    - GOARM=7
    - DEBIAN_RELEASE='stretch'
    - DOCKER_PWD='/mnt'
    - DOCKER_IMAGE="debian:${DEBIAN_RELEASE}"
  matrix:
    - V=5.3.1
before_install:
  # record action in script
  - touch setup.sh
  - l() { echo "${@}" >> setup.sh; }
  - l '#!/bin/bash'
  - l set -ex
  # setup backports
  - l "echo 'deb http://deb.debian.org/debian ${DEBIAN_RELEASE}-backports main' > /etc/apt/sources.list.d/backports.list"
  - l apt-get update
  # install golang & nodejs
  - l apt-get install -yqt "${DEBIAN_RELEASE}-backports" golang nodejs
  # install build dependencies
  - l apt-get install -yq wget ca-certificates make patch
  # download & extract mattermost-server  
  - l wget -q "https://github.com/mattermost/mattermost-server/archive/v${V}.tar.gz" -O mattermost-server.tar.gz
  - l tar -C "${SRCROOT}/mattermost-server" --strip-components=1 -xf mattermost-server.tar.gz
  # download & extract mattermost-webapp
  - l wget -q "https://github.com/mattermost/mattermost-webapp/archive/v${V}.tar.gz" -O mattermost-webapp.tar.gz
  - l tar -C "${SRCROOT}/mattermost-webapp" --strip-components=1 -xf mattermost-webapp.tar.gz
  - l make build -C "${SRCROOT}/mattermost-webapp"
  # workaround (instead of patch): platform binary is in GOOS_GOARCH, Makefile expects it in linux_amd64
  - l ln -s "${GOPATH}/bin/linux_arm" "${GOPATH}/bin/linux_amd64"
  # adapt and revert reverted commit, https://github.com/mattermost/mattermost-server/pull/8537
  - l patch -d "${SRCROOT}/mattermost-server" -p1 < "${TRAVIS_BUILD_DIR}/build-release.patch"
  # workaround (instead of patch): overwrite GO variable to enforce desired GOARCH
  - l make config-reset build-linux package-linux -C "${SRCROOT}/mattermost-server" PLUGIN_PACKAGES="" GO="GOARCH=arm $(which go)" BUILD_NUMBER="dev-arm-tag${V}"
  # workaround (instead of patch): Makefile creates *-amd64.tar.gz
  - l mv "${SRCROOT}/mattermost-server/dist/mattermost-team-linux-amd64.tar.gz" "${TRAVIS_BUILD_DIR}/mattermost-${V}-arm.tar.gz"
  - l sha512sum "${TRAVIS_BUILD_DIR}/mattermost-${V}-arm.tar.gz" | tee "${TRAVIS_BUILD_DIR}/mattermost-${V}-arm.tar.gz.sha512sum"
  - docker pull "${DOCKER_IMAGE}"
  - chmod +x setup.sh
script:
  - docker run --interactive=true --mount="type=bind,source=${PWD},destination=${DOCKER_PWD}" --rm=true --tty=true --workdir="${DOCKER_PWD}" "${DOCKER_IMAGE}" ./setup.sh
deploy:
  provider: releases
  api_key: "${GITHUB_OAUTH_TOKEN}"
  file:
    - "${TRAVIS_BUILD_DIR}/mattermost-${V}-arm.tar.gz"
    - "${TRAVIS_BUILD_DIR}/mattermost-${V}-arm.tar.gz.sha512sum"
  skip_cleanup: true
